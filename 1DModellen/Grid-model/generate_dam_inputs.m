%
% master script to generate a sequence of SWAN input file
% and a batch file for running it on the computer
%
% Creator: Gerbrant van Vledder
% Adjusted by: Chahid Taaban
% 11 May 2017

clear all; clc;
disp('Busy, just a few moments...')
clear bb
bb{1} = 'REM  runs script generated by Chahid Taaban';
mxb   = 100;  % Note that bottom grid may be different from cgrid

%
%  Additional sensitivities can easily be added^
%  You may also replace the loop structure
%  or change the way crun is filled, e.g. with a code 
%  reflecting the parameters.
%


irun0 = 1;   % irun begin
irun = irun0; % irun end

% wave and dam conditions:
alpha = [18/9.]; % 1/2 -> cot(theta) = 2;
%alpha = [18/5.]; 
Bc = [5, 10, 20, 40, 60];
mx = [200];
hs = [0.5, 0.75, 1, 1.25, 1.5,  2];
tp = [1, 2, 3, 4, 6, 8, 10];
level = [-1, 0, 1, 2 ,3];

xb = zeros(length(Bc),6);

% Options for SWAN
triad = true;%false;
bkd = true;%false;
restrictions = true;

for L = 100
    for m = 1:length(alpha)
        for i=1:length(Bc)
            [a0, b0, c0 ] = make_bottom_func(mxb, L, alpha(m), Bc(i));
            xb(i,:) = a0;
            for n = 1:length(mx)
              for j = 1:length(hs)
                for k = 1:length(tp)
                    minFreq = 1/2. / tp(k); %1/3
                    maxFreq = 2.75 / tp(k); %3.1
                  for l = 1:length(level)
                    crun = ['RUN' num2str(irun,'%3.3i')];
                    
                    h = c0 + level(l);
                    g = 9.81;    
                    L0 = (g / (2 * pi)) * (tp(k)^2);
                    d = b0;
                    Rc = d + level(l);
                    s = hs(j)/L0;
                    Bc_L0 = Bc(i)/L0;
                    if restrictions
                        check = (s < 0.6 && hs(j)/h < 0.54 && Rc/hs(j) < 2.5 && Rc/hs(j) > -2.5 && s > 0.002);
                    else 
                        check = 1;
                    end
                    if check
                        tt = read_textfile('swan_dam.mas');
                        if triad
                            tt = mod_textfile(tt,'[Tri]',['Tri 1 0.8 ' num2str(maxFreq)]);
                            %tt = mod_textfile(tt,'[Tri]','Tri');
                        else
                            tt = mod_textfile(tt,'[Tri]','$Tri');
                        end
                        tt = mod_textfile(tt,'[run]',crun);
                        tt = mod_textfile(tt,'[mx]',num2str(mx(n)));
                        tt = mod_textfile(tt,'[mxb]',num2str(mxb));
                        tt = mod_textfile(tt,'[level]',num2str(level(l)));
                        tt = mod_textfile(tt,'[flow]',num2str(minFreq));
                        tt = mod_textfile(tt,'[fhigh]',num2str(maxFreq));
                        tt = mod_textfile(tt,'[dam]',['dam_' num2str(Bc(i))]);
                        tt = mod_textfile(tt,'[hs]',num2str(hs(j)));
                        tt = mod_textfile(tt,'[tp]',num2str(tp(k)));
                        if bkd
                            tt = mod_textfile(tt,'[break]','BKD');
                        else
                            tt = mod_textfile(tt,'[break]','$CON 1 0.65');
                        end
                        %
                        fbatch = ['dam_' num2str(Bc(i)) '_' crun]; 
                        fswan  = [['dam_' num2str(Bc(i)) '_'] crun '.swn'];
                        write_textfile(fswan,tt);
                        movefile(['dam_' num2str(Bc(i)) '*'], ['SwanRuns/' num2str(Bc(i))]); 
                        rr1  = ['cd ' pwd '/SwanRuns/' num2str(Bc(i))];
                        rr2  = ['call ' 'swan_run ' fbatch];
                        bb  = [bb rr1 rr2];
                        copyfile('Dummy/show_waves.m', [['SwanRuns/' num2str(Bc(i)) '/dam_'  num2str(Bc(i)) '_']  crun '_show_waves.m']);
                        copyfile('Dummy/Hierarchy.m', ['SwanRuns/' num2str(Bc(i)) '/Hierarchy.m']);
                        copyfile('Dummy/TransmissieCoefficient.m', ['SwanRuns/' num2str(Bc(i)) '/TransmissieCoefficient.m']);
                        copyfile('Dummy/swan4110.exe', ['SwanRuns/' num2str(Bc(i))]);
                        copyfile('Dummy/swan_run.bat', ['SwanRuns/' num2str(Bc(i))]); 
                                
                        
                        Hi = hs(j);
                        Tp = tp(k);
                        Alpha = alpha(m);
                        save([pwd '/SwanRuns/' num2str(Bc(i)) '/dam_' num2str(Bc(i)) '_' crun '_var2.mat'], 'Hi', 'Tp', 'L0', 'Rc', 'Alpha');
                        
                        irun = irun+1;     
                    end
                  end
                end
              end
            end
        end
    end
end

write_textfile(['Master/master_run_script_' date '.bat'],bb)
close all
fclose all;
save('var', 'irun0', 'irun', 'Bc', 'L', 'level', 'mx', 'tp', 'hs', 'alpha', 'mx', 'xb', '-append');
disp('Completed!')
